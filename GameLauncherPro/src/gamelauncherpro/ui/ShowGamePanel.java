/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gamelauncherpro.ui;

import gamelauncherpro.config.GameConfig;
import gamelauncherpro.config.GameDB;
import java.awt.Container;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 *
 * @author Marianne
 */
public class ShowGamePanel extends javax.swing.JPanel {

    private final GameConfig gameConfig;
    private final GameLauncherPro ui;

    /**
     * Creates new form ShowGamePanel
     */
    public ShowGamePanel(GameConfig gc, GameLauncherPro ui) {
        this.gameConfig = gc;
        initComponents();

        this.ui = ui;
        
        updateInfo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jGameIcon = new javax.swing.JLabel();
        jGameName = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        jGameIcon.setBackground(new java.awt.Color(255, 153, 153));

        jGameName.setText("<html><h1>GameName</h1>");

        jButton1.setText("Launch");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jGameIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jGameName, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jGameName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jGameIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        GameDB.singleton().launchGame(gameConfig);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Container parent = this.getParent();
        
        while(!(parent instanceof JFrame)) {
            parent = parent.getParent();
        }
        
        JDialog gameDialog = new JDialog((JFrame)parent, "Edit Game", true);
        AddGamePanel gamePanel = new AddGamePanel(this.gameConfig);
        gameDialog.getContentPane().setLayout(new GridLayout(1,1));
        gameDialog.getContentPane().add(gamePanel);
        gameDialog.pack();
        gameDialog.setLocationRelativeTo((JFrame)parent);
        gameDialog.setVisible(true);
        
        String gameName = gamePanel.getGameName();
        String gameExecutable = gamePanel.getGameExecutable();
        String coverPath = gamePanel.getCoverImagePath();
        String screenShotPath = gamePanel.getScreenshotPath();
        
        this.gameConfig.setName(gameName);
        this.gameConfig.setLaunchPath(gameExecutable);
        this.gameConfig.setCoverPath(coverPath);
        this.gameConfig.setScreenshotPath(screenShotPath);
        
        GameDB.singleton().save();
        
        ui.updateAvaliableGames();
        
        this.updateInfo();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jGameIcon;
    private javax.swing.JLabel jGameName;
    // End of variables declaration//GEN-END:variables

    private void updateInfo() {
        jGameName.setText("<html></body>"
                + "<h1>" + gameConfig.getName() + "</h1>"
                + "");
        
        try {
            File imageFile = new File(this.gameConfig.getCoverPath());
            
            BufferedImage coverImage = ImageIO.read(imageFile);
            
            double aspect = coverImage.getWidth() / (double)coverImage.getHeight();
            
            int width = coverImage.getWidth();
            int height = coverImage.getHeight();

            if(width >= height) {
                width = 150;
                height = (int)(width / aspect);
            } else {
                height = 150;
                width = (int)(height * aspect);
            }
            
            Image scaledImage = coverImage.getScaledInstance(width, height, BufferedImage.SCALE_SMOOTH);
            
            jGameIcon.setIcon(new ImageIcon(scaledImage));
        } catch(Exception e) {
        }
    }
}
