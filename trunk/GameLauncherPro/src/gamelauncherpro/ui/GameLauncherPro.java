/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gamelauncherpro.ui;

import gamelauncherpro.config.GameConfig;
import gamelauncherpro.config.GameDB;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.util.List;
import javax.swing.JDialog;

/**
 *
 * @author Marianne
 */
public class GameLauncherPro extends javax.swing.JFrame {

    /**
     * Creates new form GameLauncherPro
     */
    public GameLauncherPro() {
        initComponents();
        updateAvaliableGames();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jGamesPanels = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jMenuPanel.setBackground(new java.awt.Color(153, 153, 153));

        jButton1.setText("Add Game");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jMenuPanelLayout = new javax.swing.GroupLayout(jMenuPanel);
        jMenuPanel.setLayout(jMenuPanelLayout);
        jMenuPanelLayout.setHorizontalGroup(
            jMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jMenuPanelLayout.setVerticalGroup(
            jMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMenuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setMaximumSize(new java.awt.Dimension(800, 32767));

        jGamesPanels.setBackground(new java.awt.Color(153, 153, 153));
        jGamesPanels.setMaximumSize(new java.awt.Dimension(800, 32767));

        javax.swing.GroupLayout jGamesPanelsLayout = new javax.swing.GroupLayout(jGamesPanels);
        jGamesPanels.setLayout(jGamesPanelsLayout);
        jGamesPanelsLayout.setHorizontalGroup(
            jGamesPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 798, Short.MAX_VALUE)
        );
        jGamesPanelsLayout.setVerticalGroup(
            jGamesPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 432, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jGamesPanels);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jMenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jMenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JDialog gameDialog = new JDialog(this, "Add Game", true);
        AddGamePanel gamePanel = new AddGamePanel();
        gameDialog.getContentPane().setLayout(new GridLayout(1,1));
        gameDialog.getContentPane().add(gamePanel);
        gameDialog.pack();
        gameDialog.setLocationRelativeTo(this);
        gameDialog.setVisible(true);
        
        String gameName = gamePanel.getGameName();
        String gameExecutable = gamePanel.getGameExecutable();
        String coverPath = gamePanel.getCoverImagePath();
        String screenShotPath = gamePanel.getScreenshotPath();
        
        GameConfig gc = new GameConfig(gameName);
        gc.setLaunchPath(gameExecutable);
        gc.setCoverPath(coverPath);
        gc.setScreenshotPath(screenShotPath);
        
        GameDB.singleton().addGame(gc);
        GameDB.singleton().save();
        
        updateAvaliableGames();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jGamesPanels;
    private javax.swing.JPanel jMenuPanel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    public void updateAvaliableGames() {
        List<GameConfig> games = GameDB.singleton().getGames();
        
        jGamesPanels.removeAll();
        jGamesPanels.setLayout(new GridBagLayout());
        
        int i = 0;
        for(GameConfig gc : games) {
            GridBagConstraints constraints = new GridBagConstraints();
            constraints.fill = GridBagConstraints.HORIZONTAL;
            constraints.gridx = 0;
            constraints.anchor = GridBagConstraints.NORTHWEST;
            constraints.insets = new Insets(5, 0, 0, 0);
            
            ShowGamePanel gamePanel = new ShowGamePanel(gc, this);
            if(i % 2 == 0) {
                gamePanel.setBackground(new Color(240, 240, 240));
            }
            
            jGamesPanels.add(gamePanel, constraints);
            i++;
        }
        
        this.pack();
    }
}
